<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sam.shen.scheduing.mapper.UserMapper">
    <resultMap id="UserMap" type="org.sam.shen.scheduing.entity.User">
        <result column="id" property="id"/>
        <result column="uname" property="uname"/>
        <result column="password" property="password"/>
        <result column="enable" property="enable"/>
    </resultMap>

    <resultMap id="UserAgentGroupVo" type="org.sam.shen.scheduing.vo.UserAgentGroupVo">
        <result column="id" property="userId"/>
        <result column="uname" property="uname"/>
        <result column="password" property="password"/>
        <result column="enable" property="enable"/>
        <result column="groups" property="groups"/>
        <result column="group_ids" property="groupIds"/>
    </resultMap>

    <select id="login" resultMap="UserMap">
        SELECT id, uname, password, enable FROM `user` WHERE uname = #{uname} AND password = #{password} AND enable = 1
    </select>
    
    <insert id="insert" parameterType="org.sam.shen.scheduing.entity.User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO user(uname, password, enable) VALUES (#{uname}, #{password}, #{enable})
    </insert>
    
    <update id="update" parameterType="org.sam.shen.scheduing.entity.User">
        UPDATE `user` set uname = #{uname} WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM `user` WHERE id = #{userId}
    </delete>

    <update id="modifyPassword">
        UPDATE `user` SET password = #{password} WHERE id = #{id}
    </update>
    
    <update id="enableUser">
        UPDATE `user` SET enable = #{enable} WHERE id = #{id}
    </update>
    
    <select id="selectUserAndGroup" parameterType="java.lang.String" resultMap="UserAgentGroupVo">
        SELECT
            a.id,
            max(uname) AS uname,
            max(`enable`) AS `enable`,
            GROUP_CONCAT(d.`group`) AS groups,
            GROUP_CONCAT(d.group_id) AS group_ids
        FROM
            `user` a
        LEFT JOIN(
            SELECT
                concat_ws('-' , c.id , c.group_name) AS `group`,
                b.group_id,
                b.user_id
            FROM
                user_agent_group b,
                agent_group c
            WHERE
                b.group_id = c.id
        ) d ON a.id = d.user_id AND a.`enable` = 1
        <where>
            <if test="uname != null and uname != ''">
                AND uname LIKE concat('%', concat(#{uname}, '%'))
            </if>
        </where>
        GROUP BY a.id
    </select>

    <select id="selectUserAndGroupById" parameterType="java.lang.String" resultMap="UserAgentGroupVo">
        SELECT
            a.id,
            max(uname) AS uname,
            max(`enable`) AS `enable`,
            GROUP_CONCAT(d.`group`) AS groups,
            GROUP_CONCAT(d.group_id) AS group_ids
        FROM
            `user` a
        LEFT JOIN(
            SELECT
                concat_ws('-' , c.id , c.group_name) AS `group`,
                b.group_id,
                b.user_id
            FROM
                user_agent_group b,
                agent_group c
            WHERE
                b.group_id = c.id
        ) d ON a.id = d.user_id AND a.`enable` = 1
        WHERE a.id = #{userId}
        GROUP BY a.id
    </select>


</mapper>